DECLARE W, SW, NUM, PERIOD, SPECIAL;
DECLARE MMSE, MMST, DATE;
DECLARE Monatsname, MiniMentalTest;
DECLARE NormalizedNamedEntity, Concept;

// Mark Dates previously marked by RegExp Detectors
NormalizedNamedEntity{REGEXP(NormalizedNamedEntity.concept.identifier,"short_date") -> MARK(DATE)};
NormalizedNamedEntity{REGEXP(NormalizedNamedEntity.concept.identifier,"full_date") -> MARK(DATE)};
//NUM{REGEXP("[0-9]{1,2}")} SPECIAL.ct=="/" NUM{REGEXP("20[0-9]{2}") -> MARK(DATE)};

// Annotate Name of Month (not used yet though)
Document {-> MARKFAST(Monatsname, 'config/Monate.twl', true, 2) };

// Mark combinations of Mini-Mental-State Exams
W.ct=="MMST" {-> MARK(MiniMentalTest,1)};
W.ct=="MMSE" {-> MARK(MiniMentalTest,1)};
W.ct=="Mini" SPECIAL? W.ct=="Mental" SPECIAL? W.ct=="Status" SPECIAL? W.ct=="Test"? {-> MARK(MiniMentalTest,1,7)};
W.ct=="Mini" SPECIAL? W.ct=="Mental" SPECIAL? W.ct=="Status" {->MARK(MiniMentalTest, 1,5)};
W.ct=="Mini" SPECIAL? W.ct=="Mental" SPECIAL? W.ct=="State" {->MARK(MiniMentalTest, 1,5)};
W.ct=="Mini" SPECIAL? W.ct=="Mental" SPECIAL? W.ct=="State" SPECIAL? W.ct=="Test" {->MARK(MiniMentalTest, 1,7)};

// Mark the results of the test
NUM W.ct=="von" NUM.ct=="30" {-> MARK(MMSE,1,3)};
NUM W.ct=="Pkt" PERIOD? W.ct=="von" NUM.ct=="30" {-> MARK(MMSE,1,5)}; 
NUM W.ct=="Pkt" PERIOD? SPECIAL NUM.ct=="30" {-> MARK(MMSE,1,5)}; 
NUM SPECIAL.ct=="/" NUM.ct=="30" {-> MARK(MMSE,1,3)};
NUM W.ct=="von" NUM.ct=="20" {-> MARK(MMSE,1,3)};
NUM W.ct=="Pkt" PERIOD? W.ct=="von" NUM.ct=="20" {-> MARK(MMSE,1,5)}; 
NUM W.ct=="Pkt" PERIOD? SPECIAL NUM.ct=="20" {-> MARK(MMSE,1,5)}; 
NUM SPECIAL.ct=="/" NUM.ct=="20" {-> MARK(MMSE,1,3)};

// Include a date that is near the MiniMentalTest
MiniMentalTest ANY[1,2]? DATE {->MARK(MiniMentalTest , 3,7)};

// Create the extractable Annotations
// When one of the rules hit, remove the underlying annotation
// so that it won't trigger a second time (still happens though)
DATE COLON MMSE {-> CREATE(MMST,1,3, "MMSE"=MMSE , "DATE"=DATE)};
MMSE{PARTOF(MMST) -> UNMARK(MMSE)};
DATE MMSE {-> CREATE(MMST,1,2, "MMSE"=MMSE , "DATE"=DATE)};
MMSE{PARTOF(MMST) -> UNMARK(MMSE)};
MMSE DATE {-> CREATE(MMST,1,2, "MMSE"=MMSE , "DATE"=DATE)};
MMSE{PARTOF(MMST) -> UNMARK(MMSE)};
MMSE {-> CREATE(MMST, "MMSE"=MMSE)};

// Remove all Dates that were not included
DATE{-PARTOF(MiniMentalTest) -> UNMARK(DATE)};
